<h2 id="avant-propos">Avant-propos</h2><p>NodeAtlas est un framework JavaScript MVC(2) côté serveur sous forme de <a href="https://www.npmjs.com/package/node-atlas">module npm</a> (le module <a href="https://www.npmjs.com/package/node-atlas">node-atlas</a> sur npm) et tournant avec <a href="https://nodejs.org/">Node.js</a>. NodeAtlas vous permet de :</p><ul>
<li><p>Créer, maintenir et faire tourner des sites internationalisés (et localisables) sans mettre en place le moindre fichier serveur JavaScript. Particulièrement taillé pour la réalisation de sites vitrines ou d'applications web monopages hautement performante et maintenable en des temps records.</p>
<blockquote>
<p>Exemple : <a href="https://bruno.lesieur.name/">Simple page web</a> ou <a href="http://www.impaakt.com/">Monopage navigable</a>.</p>
</blockquote>
</li>
<li><p>Créer, maintenir et documenter des interfaces utilisateurs HTML / CSS / JavaScript pour fournir un ensemble de livrables clients cohérants en tant que guide de style pour la réalisation de divers sites ou applications web ou encore monter des sites sans partie serveur (par exemple pour GitHub Pages).</p>
<blockquote>
<p>Exemple : <a href="https://www.lesieur.name/doc-atlas/">Documentation de pages, composants et d'interface web</a> ou <a href="https://node-atlas.js.org/">le site officiel NodeAtlas</a>.</p>
</blockquote>
</li>
<li><p>Développer des sites, des applications ou des API distantes en <a href="https://nodejs.org/">Node.js</a> de manière évolutives et tournant côté serveur tout en vous permettant grâce à l'écosystème <a href="https://www.npmjs.com/">npm</a> et les built-in fonctions de créer des contenus clients temps réel, de packager et optimiser vos sites pour de hautes performances, d'être orienté composant avec des réponses HTTP passant la validation W3C et parfaitement indexable par les moteurs de recherche pour le SEO.</p>
<blockquote>
<p>Exemple : <a href="https://blog.lesieur.name/">Blog</a>, <a href="https://www.lesieur.name/">Portfolio</a>, <a href="https://www.coup-critique.com/">Site</a> ou <a href="https://www.lesieur.name/api/">API Distante</a>.</p>
</blockquote>
</li>
</ul><h3 id="pourquoi-nodeatlas">Pourquoi NodeAtlas ?</h3><p>NodeAtlas est conçu pour créer des sites évolutifs et pour permettre aux développeurs front-end et back-end d'embrasser <a href="https://nodejs.org/">Node.js</a> en leur offrant une une courbe d'apprentissage aisée.</p><p>Commencez avec une simple page HTML,</p><ul>
<li>puis créez d'autres pages,</li>
<li>puis internationalisez les,</li>
<li>puis minifiez/offusquez/compressez vos sources,</li>
<li>puis utiliser des préprocesseurs comme <a href="http://stylus-lang.com/">Stylus</a>, <a href="http://lesscss.org/">Less</a> ou/et <a href="https://pugjs.org/api/getting-started.html">Pug</a> simplement,</li>
<li>puis prenez la main sur la logique serveur avec les points d'ancrage et <a href="http://expressjs.com/">Express</a>,</li>
<li>puis soyez temps réel et réactif côté serveur grâce à <a href="https://socket.io/">Socket.IO</a>,</li>
<li>puis connectez vous à <a href="https://www.mysql.com/fr/">MySQL</a>, <a href="https://www.mongodb.com/">MongoDB</a>, <a href="https://www.elastic.co/fr/">ElasticSearch</a>...,</li>
<li>puis soyez isomorphique et réactif côté client grâce à <a href="https://fr.vuejs.org/">Vue</a> ou <a href="https://facebook.github.io/react/">React</a>,</li>
<li>puis soyez orienté composants et/ou services grâce à des projets comme <a href="https://github.com/MachinisteWeb/ComponentAtlas">ComponentAtlas</a> et/ou <a href="https://github.com/MachinisteWeb/ApiAtlas">ApiAtlas</a>,</li>
<li>puis laissez votre client éditer son site avec <a href="https://github.com/MachinisteWeb/EditAtlas">EditAtlas</a>,</li>
<li>puis créer des plugins,</li>
<li>puis...</li>
</ul><h3 id="d-autres-frameworks">D'autres frameworks ?</h3><p>Contrairement aux frameworks JavaScript côté client comme Vue, Angular ou React, NodeAtlas fonctionne côté serveur et délivre son contenu derrière des URL par réponse HTTP. Les sites sont indexables et valides W3C : c'est-à-dire que le code utile est bien renvoyé par la réponse HTTP en premier lieu, et est ensuite modifiée par requête asynchrone (AJAX, Websocket...) si vous le souhaitez. Cela signifie donc que NodeAtlas n'est pas une alternative aux nombreux frameworks JavaScript côté client qui ne se servent que de <a href="https://nodejs.org/en/">Node.js</a> pour l'utilisation de <a href="https://www.npmjs.com/">npm</a>, <a href="http://jspm.io/">jspm</a>, <a href="http://gulpjs.com/">gulp</a>, etc. NodeAtlas est plutôt une alternative à Sails ou Meteor. Il forme un socle au dessus de Node.js et remplace bien votre code PHP, Java ou encore C# côté serveur. À l'instar de <a href="https://www.meteor.com/">Meteor</a>, NodeAtlas vous fournit un cadre de travail et une structure initiale (que vous pouvez modifier) et des outils vous permettant de vous passer de <a href="http://gulpjs.com/">gulp</a> mais contrairement à <a href="https://www.meteor.com/">Meteor</a> l'objet <code>NA</code> n'est disponible que côté serveur par défaut. Il vous est donc laissé le choix d'étendre les mécanismes NodeAtlas à votre partie cliente ou d'utiliser la structure de votre choix.</p><p>Pour un comparatif avec d'autre bibliothèque / framework / API JavaScript côté serveur, <a href="plus-sur-nodeatlas.html#nodeatlas-vs-les-autres">vous pouvez consulter cette grille</a>.</p><h3 id="exemples-de-realisations">Exemples de réalisations</h3><p>Vous trouverez une liste de dépôts que vous pouvez décortiquer à votre gré sur la communauté GitHub de NodeAtlas :</p><ul>
<li><a href="https://github.com/NodeAtlas">Tous les exemples fournis par la communauté NodeAtlas sur GitHub</a>.</li>
</ul><h3 id="documentation">Documentation</h3><p>En complément de cette documentation, vous avez également accès aux,</p><ul>
<li><a href="https://github.com/NodeAtlas/NodeAtlas#node-atlas">tl;dr</a>,</li>
<li><a href="https://node-atlas.js.org/doc/node-atlas/">détails des fonctions de l'objet NA</a> (En) et vous pouvez aussi</li>
<li><a href="https://gitter.im/NodeAtlas/Aide">discuter sur le chat ou demander de l'aide pour NodeAtlas</a>.</li>
</ul><h3 id="contribution">Contribution</h3><p>Si vous souhaitez contribuer avec :</p><ul>
<li>De l'amélioration ou de la correction de code,</li>
<li>De la correction d'orthographe pour la documentation française ou</li>
<li>De la traduction décente pour la documentation anglaise</li>
</ul><p>Merci de respecter ses étapes :</p><ol>
<li>Répliquez le dépôt NodeAtlas.</li>
<li>Travaillez sur une branch créée à partir de la branche master.</li>
<li>Actez et poussez votre branche.</li>
<li>Faites une proposition de fusion.</li>
<li>Soyez patient. ;-)</li>
</ol><p>Tout en respectant les conventions suivantes :</p><ul>
<li><a href="http://www.sonarqube.org/">Passez le test Sonarqube JS avec un rang A</a> : Bugs, Vulnerabilités et Dette Technique.</li>
</ul><p>Merci d'avance pour votre aide !</p><div><div class="after">
							<a href="installation.html">Installation ►</a>
						</div></div>